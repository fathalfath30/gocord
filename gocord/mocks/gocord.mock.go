// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	channel "github.com/fathalfath30/gocord/gocord/channel"

	guild "github.com/fathalfath30/gocord/gocord/guild"

	mock "github.com/stretchr/testify/mock"
)

// GoCordMock is an autogenerated mock type for the IGoCord type
type GoCordMock struct {
	mock.Mock
}

// Channel provides a mock function with given fields:
func (_m *GoCordMock) Channel() channel.IChannel {
	ret := _m.Called()

	var r0 channel.IChannel
	if rf, ok := ret.Get(0).(func() channel.IChannel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(channel.IChannel)
		}
	}

	return r0
}

// Guild provides a mock function with given fields:
func (_m *GoCordMock) Guild() guild.IGuild {
	ret := _m.Called()

	var r0 guild.IGuild
	if rf, ok := ret.Get(0).(func() guild.IGuild); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(guild.IGuild)
		}
	}

	return r0
}

type mockConstructorTestingTNewGoCordMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewGoCordMock creates a new instance of GoCordMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGoCordMock(t mockConstructorTestingTNewGoCordMock) *GoCordMock {
	mock := &GoCordMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
